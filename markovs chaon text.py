# -*- coding: utf-8 -*-
"""Text Generation with Markov Chains.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xXG1zKWT1FjjPSVokEeNI9Zl1x_MFf7g
"""

# ============================================
# Task 3: Text Generation with Markov Chains
# ============================================

import random

# Step 1: Input Text (replace with your own dataset if needed)
text = """
ProDigy Infotech is a leading IT company. It provides software development, training, and consultancy services.
We focus on quality solutions and innovative technologies. Our team works with dedication and excellence.
"""

# Step 2: Preprocess text
words = text.split()  # Split text into words
markov_chain = {}

# Step 3: Build the Markov chain dictionary
for i in range(len(words)-1):
    key = words[i]
    next_word = words[i+1]
    if key in markov_chain:
        markov_chain[key].append(next_word)
    else:
        markov_chain[key] = [next_word]

# Optional: Print Markov chain dictionary (for debugging)
# print(markov_chain)

# Step 4: Function to generate text
def generate_text(chain, length=30):
    word = random.choice(list(chain.keys()))
    result = [word]
    for _ in range(length-1):
        if word in chain:
            word = random.choice(chain[word])
            result.append(word)
        else:
            word = random.choice(list(chain.keys()))
            result.append(word)
    return ' '.join(result)

# Step 5: Generate text
generated = generate_text(markov_chain, 50)  # Generate 50 words
print("âœ… Generated Text:\n")
print(generated)
